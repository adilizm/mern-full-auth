version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    environment:
      - MONGO_DB_URL=mongodb://admin:password@mongodb:27017/myfullauth?authSource=admin
    depends_on:
      - mongodb
    command: npm run start  # Use nodemon for live reload
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - MERN_FULL_AUTH_NETWORK

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - MERN_FULL_AUTH_NETWORK

  mongodb:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: myfullauth
    volumes:
      - mongodb-data:/data/db  # Persistent volume for MongoDB data
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - MERN_FULL_AUTH_NETWORK
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data  # Persistent volume for redis data
    networks:
      - MERN_FULL_AUTH_NETWORK
  nginx:
    image: nginx
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
    - "80:5001"
    environment:
    - NGINX_PORT=5001
    networks:
      - MERN_FULL_AUTH_NETWORK
    depends_on:
      - frontend
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb 
    depends_on:
      - mongodb
    networks:
      - MERN_FULL_AUTH_NETWORK
volumes:
  mongodb-data:
  redis-data:

networks:
  MERN_FULL_AUTH_NETWORK:  
